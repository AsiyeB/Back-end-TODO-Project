(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["vendor.aurelia-http-client~a88980ec"],{

/***/ "1aCK":
/*!*************************************************************************************!*\
  !*** ./node_modules/aurelia-http-client/dist/native-modules/aurelia-http-client.js ***!
  \*************************************************************************************/
/*! exports provided: Headers, RequestMessage, HttpResponseMessage, mimeTypes, RequestMessageProcessor, timeoutTransformer, callbackParameterNameTransformer, credentialsTransformer, progressTransformer, downloadProgressTransformer, responseTypeTransformer, headerTransformer, contentTransformer, JSONPRequestMessage, createJSONPRequestMessageProcessor, HttpRequestMessage, createHttpRequestMessageProcessor, ErrorHttpResponseMessage, RequestBuilder, HttpClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(Promise) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Headers\", function() { return Headers; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RequestMessage\", function() { return RequestMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpResponseMessage\", function() { return HttpResponseMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mimeTypes\", function() { return mimeTypes; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RequestMessageProcessor\", function() { return RequestMessageProcessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"timeoutTransformer\", function() { return timeoutTransformer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"callbackParameterNameTransformer\", function() { return callbackParameterNameTransformer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"credentialsTransformer\", function() { return credentialsTransformer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"progressTransformer\", function() { return progressTransformer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"downloadProgressTransformer\", function() { return downloadProgressTransformer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"responseTypeTransformer\", function() { return responseTypeTransformer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"headerTransformer\", function() { return headerTransformer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contentTransformer\", function() { return contentTransformer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JSONPRequestMessage\", function() { return JSONPRequestMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createJSONPRequestMessageProcessor\", function() { return createJSONPRequestMessageProcessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpRequestMessage\", function() { return HttpRequestMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createHttpRequestMessageProcessor\", function() { return createHttpRequestMessageProcessor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ErrorHttpResponseMessage\", function() { return ErrorHttpResponseMessage; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RequestBuilder\", function() { return RequestBuilder; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HttpClient\", function() { return HttpClient; });\n/* harmony import */ var aurelia_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aurelia-path */ \"iD3O\");\n/* harmony import */ var aurelia_pal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aurelia-pal */ \"70NS\");\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n\nvar Headers = function () {\n  function Headers() {\n    var headers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    \n\n    this.headers = {};\n\n    for (var _key in headers) {\n      this.headers[_key.toLowerCase()] = { key: _key, value: headers[_key] };\n    }\n  }\n\n  Headers.prototype.add = function add(key, value) {\n    this.headers[key.toLowerCase()] = { key: key, value: value };\n  };\n\n  Headers.prototype.get = function get(key) {\n    var header = this.headers[key.toLowerCase()];\n    return header ? header.value : undefined;\n  };\n\n  Headers.prototype.clear = function clear() {\n    this.headers = {};\n  };\n\n  Headers.prototype.has = function has(header) {\n    return this.headers.hasOwnProperty(header.toLowerCase());\n  };\n\n  Headers.prototype.configureXHR = function configureXHR(xhr) {\n    for (var name in this.headers) {\n      if (this.headers.hasOwnProperty(name)) {\n        xhr.setRequestHeader(this.headers[name].key, this.headers[name].value);\n      }\n    }\n  };\n\n  Headers.parse = function parse(headerStr) {\n    var headers = new Headers();\n    if (!headerStr) {\n      return headers;\n    }\n\n    var headerPairs = headerStr.split('\\r\\n');\n    for (var i = 0; i < headerPairs.length; i++) {\n      var headerPair = headerPairs[i];\n\n      var index = headerPair.indexOf(': ');\n      if (index > 0) {\n        var _key2 = headerPair.substring(0, index);\n        var val = headerPair.substring(index + 2);\n        headers.add(_key2, val);\n      }\n    }\n\n    return headers;\n  };\n\n  return Headers;\n}();\n\nvar RequestMessage = function () {\n  function RequestMessage(method, url, content, headers) {\n    \n\n    this.method = method;\n    this.url = url;\n    this.content = content;\n    this.headers = headers || new Headers();\n    this.baseUrl = '';\n  }\n\n  RequestMessage.prototype.buildFullUrl = function buildFullUrl() {\n    var absoluteUrl = /^([a-z][a-z0-9+\\-.]*:)?\\/\\//i;\n    var url = absoluteUrl.test(this.url) ? this.url : Object(aurelia_path__WEBPACK_IMPORTED_MODULE_0__[\"join\"])(this.baseUrl, this.url);\n\n    if (this.params) {\n      var qs = Object(aurelia_path__WEBPACK_IMPORTED_MODULE_0__[\"buildQueryString\"])(this.params, this.traditional);\n      url = qs ? url + (this.url.indexOf('?') < 0 ? '?' : '&') + qs : url;\n    }\n\n    return url;\n  };\n\n  return RequestMessage;\n}();\n\nvar HttpResponseMessage = function () {\n  function HttpResponseMessage(requestMessage, xhr, responseType, reviver) {\n    \n\n    this.requestMessage = requestMessage;\n    this.statusCode = xhr.status;\n    this.response = xhr.response || xhr.responseText;\n    this.isSuccess = xhr.status >= 200 && xhr.status < 400;\n    this.statusText = xhr.statusText;\n    this.reviver = reviver;\n    this.mimeType = null;\n\n    if (xhr.getAllResponseHeaders) {\n      this.headers = Headers.parse(xhr.getAllResponseHeaders());\n    } else {\n      this.headers = new Headers();\n    }\n\n    var contentType = void 0;\n\n    if (this.headers && this.headers.headers) {\n      contentType = this.headers.get('Content-Type');\n    }\n\n    if (contentType) {\n      this.mimeType = responseType = contentType.split(';')[0].trim();\n      if (mimeTypes.hasOwnProperty(this.mimeType)) responseType = mimeTypes[this.mimeType];\n    }\n\n    this.responseType = responseType;\n  }\n\n  _createClass(HttpResponseMessage, [{\n    key: 'content',\n    get: function get() {\n      try {\n        if (this._content !== undefined) {\n          return this._content;\n        }\n\n        if (this.response === undefined || this.response === null || this.response === '') {\n          this._content = this.response;\n          return this._content;\n        }\n\n        if (this.responseType === 'json') {\n          this._content = JSON.parse(this.response, this.reviver);\n          return this._content;\n        }\n\n        if (this.reviver) {\n          this._content = this.reviver(this.response);\n          return this._content;\n        }\n\n        this._content = this.response;\n        return this._content;\n      } catch (e) {\n        if (this.isSuccess) {\n          throw e;\n        }\n\n        this._content = null;\n        return this._content;\n      }\n    }\n  }]);\n\n  return HttpResponseMessage;\n}();\n\nvar mimeTypes = {\n  'text/html': 'html',\n  'text/javascript': 'js',\n  'application/javascript': 'js',\n  'text/json': 'json',\n  'application/json': 'json',\n  'application/rss+xml': 'rss',\n  'application/atom+xml': 'atom',\n  'application/xhtml+xml': 'xhtml',\n  'text/markdown': 'md',\n  'text/xml': 'xml',\n  'text/mathml': 'mml',\n  'application/xml': 'xml',\n  'text/yml': 'yml',\n  'text/csv': 'csv',\n  'text/css': 'css',\n  'text/less': 'less',\n  'text/stylus': 'styl',\n  'text/scss': 'scss',\n  'text/sass': 'sass',\n  'text/plain': 'txt'\n};\n\nfunction applyXhrTransformers(xhrTransformers, client, processor, message, xhr) {\n  var i = void 0;\n  var ii = void 0;\n\n  for (i = 0, ii = xhrTransformers.length; i < ii; ++i) {\n    xhrTransformers[i](client, processor, message, xhr);\n  }\n}\n\nvar RequestMessageProcessor = function () {\n  function RequestMessageProcessor(xhrType, xhrTransformers) {\n    \n\n    this.XHRType = xhrType;\n    this.xhrTransformers = xhrTransformers;\n    this.isAborted = false;\n  }\n\n  RequestMessageProcessor.prototype.abort = function abort() {\n    if (this.xhr && this.xhr.readyState !== aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"PLATFORM\"].XMLHttpRequest.UNSENT) {\n      this.xhr.abort();\n    }\n\n    this.isAborted = true;\n  };\n\n  RequestMessageProcessor.prototype.process = function process(client, requestMessage) {\n    var _this = this;\n\n    var promise = new Promise(function (resolve, reject) {\n      var rejectResponse = void 0;\n      if (client.rejectPromiseWithErrorObject) {\n        rejectResponse = function rejectResponse(resp) {\n          var errorResp = new ErrorHttpResponseMessage(resp);\n          reject(errorResp);\n        };\n      } else {\n        rejectResponse = function rejectResponse(resp) {\n          reject(resp);\n        };\n      }\n\n      var xhr = _this.xhr = new _this.XHRType();\n      xhr.onload = function (e) {\n        var response = new HttpResponseMessage(requestMessage, xhr, requestMessage.responseType, requestMessage.reviver);\n        if (response.isSuccess) {\n          resolve(response);\n        } else {\n          rejectResponse(response);\n        }\n      };\n\n      xhr.ontimeout = function (e) {\n        rejectResponse(new HttpResponseMessage(requestMessage, {\n          response: e,\n          status: xhr.status,\n          statusText: xhr.statusText\n        }, 'timeout'));\n      };\n\n      xhr.onerror = function (e) {\n        rejectResponse(new HttpResponseMessage(requestMessage, {\n          response: e,\n          status: xhr.status,\n          statusText: xhr.statusText\n        }, 'error'));\n      };\n\n      xhr.onabort = function (e) {\n        rejectResponse(new HttpResponseMessage(requestMessage, {\n          response: e,\n          status: xhr.status,\n          statusText: xhr.statusText\n        }, 'abort'));\n      };\n    });\n\n    return Promise.resolve(requestMessage).then(function (message) {\n      var processRequest = function processRequest() {\n        if (_this.isAborted) {\n          _this.xhr.abort();\n        } else {\n          _this.xhr.open(message.method, message.buildFullUrl(), true, message.user, message.password);\n          applyXhrTransformers(_this.xhrTransformers, client, _this, message, _this.xhr);\n          if (typeof message.content === 'undefined') {\n            _this.xhr.send();\n          } else {\n            _this.xhr.send(message.content);\n          }\n        }\n\n        return promise;\n      };\n\n      var chain = [[processRequest, undefined]];\n\n      var interceptors = message.interceptors || [];\n      interceptors.forEach(function (interceptor) {\n        if (interceptor.request || interceptor.requestError) {\n          chain.unshift([interceptor.request ? interceptor.request.bind(interceptor) : undefined, interceptor.requestError ? interceptor.requestError.bind(interceptor) : undefined]);\n        }\n\n        if (interceptor.response || interceptor.responseError) {\n          chain.push([interceptor.response ? interceptor.response.bind(interceptor) : undefined, interceptor.responseError ? interceptor.responseError.bind(interceptor) : undefined]);\n        }\n      });\n\n      var interceptorsPromise = Promise.resolve(message);\n\n      while (chain.length) {\n        var _interceptorsPromise;\n\n        interceptorsPromise = (_interceptorsPromise = interceptorsPromise).then.apply(_interceptorsPromise, chain.shift());\n      }\n\n      return interceptorsPromise;\n    });\n  };\n\n  return RequestMessageProcessor;\n}();\n\nfunction timeoutTransformer(client, processor, message, xhr) {\n  if (message.timeout !== undefined) {\n    xhr.timeout = message.timeout;\n  }\n}\n\nfunction callbackParameterNameTransformer(client, processor, message, xhr) {\n  if (message.callbackParameterName !== undefined) {\n    xhr.callbackParameterName = message.callbackParameterName;\n  }\n}\n\nfunction credentialsTransformer(client, processor, message, xhr) {\n  if (message.withCredentials !== undefined) {\n    xhr.withCredentials = message.withCredentials;\n  }\n}\n\nfunction progressTransformer(client, processor, message, xhr) {\n  if (message.progressCallback) {\n    xhr.upload.onprogress = message.progressCallback;\n  }\n}\n\nfunction downloadProgressTransformer(client, processor, message, xhr) {\n  if (message.downloadProgressCallback) {\n    xhr.onprogress = message.downloadProgressCallback;\n  }\n}\n\nfunction responseTypeTransformer(client, processor, message, xhr) {\n  var responseType = message.responseType;\n\n  if (responseType === 'json') {\n    responseType = 'text';\n  }\n\n  xhr.responseType = responseType;\n}\n\nfunction headerTransformer(client, processor, message, xhr) {\n  message.headers.configureXHR(xhr);\n}\n\nfunction contentTransformer(client, processor, message, xhr) {\n  if (message.skipContentProcessing) {\n    return;\n  }\n\n  if (aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"PLATFORM\"].global.FormData && message.content instanceof FormData) {\n    return;\n  }\n\n  if (aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"PLATFORM\"].global.Blob && message.content instanceof Blob) {\n    return;\n  }\n\n  if (aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"PLATFORM\"].global.ArrayBuffer && message.content instanceof ArrayBuffer) {\n    return;\n  }\n\n  if (message.content instanceof Document) {\n    return;\n  }\n\n  if (typeof message.content === 'string') {\n    return;\n  }\n\n  if (message.content === null || message.content === undefined) {\n    return;\n  }\n\n  message.content = JSON.stringify(message.content, message.replacer);\n\n  if (!message.headers.has('Content-Type')) {\n    message.headers.add('Content-Type', 'application/json');\n  }\n}\n\nvar JSONPRequestMessage = function (_RequestMessage) {\n  _inherits(JSONPRequestMessage, _RequestMessage);\n\n  function JSONPRequestMessage(url, callbackParameterName) {\n    \n\n    var _this2 = _possibleConstructorReturn(this, _RequestMessage.call(this, 'JSONP', url));\n\n    _this2.responseType = 'jsonp';\n    _this2.callbackParameterName = callbackParameterName;\n    return _this2;\n  }\n\n  return JSONPRequestMessage;\n}(RequestMessage);\n\nvar JSONPXHR = function () {\n  function JSONPXHR() {\n    \n  }\n\n  JSONPXHR.prototype.open = function open(method, url) {\n    this.method = method;\n    this.url = url;\n    this.callbackName = 'jsonp_callback_' + Math.round(100000 * Math.random());\n  };\n\n  JSONPXHR.prototype.send = function send() {\n    var _this3 = this;\n\n    var url = this.url + (this.url.indexOf('?') >= 0 ? '&' : '?') + encodeURIComponent(this.callbackParameterName) + '=' + this.callbackName;\n    var script = aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].createElement('script');\n\n    script.src = url;\n    script.onerror = function (e) {\n      cleanUp();\n\n      _this3.status = 0;\n      _this3.onerror(new Error('error'));\n    };\n\n    var cleanUp = function cleanUp() {\n      delete aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"PLATFORM\"].global[_this3.callbackName];\n      aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].removeNode(script);\n    };\n\n    aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"PLATFORM\"].global[this.callbackName] = function (data) {\n      cleanUp();\n\n      if (_this3.status === undefined) {\n        _this3.status = 200;\n        _this3.statusText = 'OK';\n        _this3.response = data;\n        _this3.onload(_this3);\n      }\n    };\n\n    aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].appendNode(script);\n\n    if (this.timeout !== undefined) {\n      setTimeout(function () {\n        if (_this3.status === undefined) {\n          _this3.status = 0;\n          _this3.ontimeout(new Error('timeout'));\n        }\n      }, this.timeout);\n    }\n  };\n\n  JSONPXHR.prototype.abort = function abort() {\n    if (this.status === undefined) {\n      this.status = 0;\n      this.onabort(new Error('abort'));\n    }\n  };\n\n  JSONPXHR.prototype.setRequestHeader = function setRequestHeader() {};\n\n  return JSONPXHR;\n}();\n\nfunction createJSONPRequestMessageProcessor() {\n  return new RequestMessageProcessor(JSONPXHR, [timeoutTransformer, callbackParameterNameTransformer]);\n}\n\nvar HttpRequestMessage = function (_RequestMessage2) {\n  _inherits(HttpRequestMessage, _RequestMessage2);\n\n  function HttpRequestMessage(method, url, content, headers) {\n    \n\n    var _this4 = _possibleConstructorReturn(this, _RequestMessage2.call(this, method, url, content, headers));\n\n    _this4.responseType = 'json';return _this4;\n  }\n\n  return HttpRequestMessage;\n}(RequestMessage);\n\nfunction createHttpRequestMessageProcessor() {\n  return new RequestMessageProcessor(aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"PLATFORM\"].XMLHttpRequest, [timeoutTransformer, credentialsTransformer, progressTransformer, downloadProgressTransformer, responseTypeTransformer, contentTransformer, headerTransformer]);\n}\n\nvar ErrorHttpResponseMessage = function (_HttpResponseMessage) {\n  _inherits(ErrorHttpResponseMessage, _HttpResponseMessage);\n\n  function ErrorHttpResponseMessage(responseMessage) {\n    \n\n    var _this5 = _possibleConstructorReturn(this, _HttpResponseMessage.call(this, responseMessage.requestMessage, {\n      response: responseMessage.response,\n      status: responseMessage.statusCode,\n      statusText: responseMessage.statusText\n    }, responseMessage.responseType));\n\n    _this5.name = responseMessage.responseType;\n    _this5.message = 'Error: ' + responseMessage.statusCode + ' Status: ' + responseMessage.statusText;\n    return _this5;\n  }\n\n  return ErrorHttpResponseMessage;\n}(HttpResponseMessage);\n\nvar RequestBuilder = function () {\n  function RequestBuilder(client) {\n    \n\n    this.client = client;\n    this.transformers = client.requestTransformers.slice(0);\n    this.useJsonp = false;\n  }\n\n  RequestBuilder.prototype.asDelete = function asDelete() {\n    return this._addTransformer(function (client, processor, message) {\n      message.method = 'DELETE';\n    });\n  };\n\n  RequestBuilder.prototype.asGet = function asGet() {\n    return this._addTransformer(function (client, processor, message) {\n      message.method = 'GET';\n    });\n  };\n\n  RequestBuilder.prototype.asHead = function asHead() {\n    return this._addTransformer(function (client, processor, message) {\n      message.method = 'HEAD';\n    });\n  };\n\n  RequestBuilder.prototype.asOptions = function asOptions() {\n    return this._addTransformer(function (client, processor, message) {\n      message.method = 'OPTIONS';\n    });\n  };\n\n  RequestBuilder.prototype.asPatch = function asPatch() {\n    return this._addTransformer(function (client, processor, message) {\n      message.method = 'PATCH';\n    });\n  };\n\n  RequestBuilder.prototype.asPost = function asPost() {\n    return this._addTransformer(function (client, processor, message) {\n      message.method = 'POST';\n    });\n  };\n\n  RequestBuilder.prototype.asPut = function asPut() {\n    return this._addTransformer(function (client, processor, message) {\n      message.method = 'PUT';\n    });\n  };\n\n  RequestBuilder.prototype.asJsonp = function asJsonp(callbackParameterName) {\n    this.useJsonp = true;\n    return this._addTransformer(function (client, processor, message) {\n      message.callbackParameterName = callbackParameterName;\n    });\n  };\n\n  RequestBuilder.prototype.withUrl = function withUrl(url) {\n    return this._addTransformer(function (client, processor, message) {\n      message.url = url;\n    });\n  };\n\n  RequestBuilder.prototype.withContent = function withContent(content) {\n    return this._addTransformer(function (client, processor, message) {\n      message.content = content;\n    });\n  };\n\n  RequestBuilder.prototype.withBaseUrl = function withBaseUrl(baseUrl) {\n    return this._addTransformer(function (client, processor, message) {\n      message.baseUrl = baseUrl;\n    });\n  };\n\n  RequestBuilder.prototype.withParams = function withParams(params, traditional) {\n    return this._addTransformer(function (client, processor, message) {\n      message.traditional = traditional;\n      message.params = params;\n    });\n  };\n\n  RequestBuilder.prototype.withResponseType = function withResponseType(responseType) {\n    return this._addTransformer(function (client, processor, message) {\n      message.responseType = responseType;\n    });\n  };\n\n  RequestBuilder.prototype.withTimeout = function withTimeout(timeout) {\n    return this._addTransformer(function (client, processor, message) {\n      message.timeout = timeout;\n    });\n  };\n\n  RequestBuilder.prototype.withHeader = function withHeader(key, value) {\n    return this._addTransformer(function (client, processor, message) {\n      message.headers.add(key, value);\n    });\n  };\n\n  RequestBuilder.prototype.withCredentials = function withCredentials(value) {\n    return this._addTransformer(function (client, processor, message) {\n      message.withCredentials = value;\n    });\n  };\n\n  RequestBuilder.prototype.withLogin = function withLogin(user, password) {\n    return this._addTransformer(function (client, processor, message) {\n      message.user = user;message.password = password;\n    });\n  };\n\n  RequestBuilder.prototype.withReviver = function withReviver(reviver) {\n    return this._addTransformer(function (client, processor, message) {\n      message.reviver = reviver;\n    });\n  };\n\n  RequestBuilder.prototype.withReplacer = function withReplacer(replacer) {\n    return this._addTransformer(function (client, processor, message) {\n      message.replacer = replacer;\n    });\n  };\n\n  RequestBuilder.prototype.withProgressCallback = function withProgressCallback(progressCallback) {\n    return this._addTransformer(function (client, processor, message) {\n      message.progressCallback = progressCallback;\n    });\n  };\n\n  RequestBuilder.prototype.withDownloadProgressCallback = function withDownloadProgressCallback(downloadProgressCallback) {\n    return this._addTransformer(function (client, processor, message) {\n      message.downloadProgressCallback = downloadProgressCallback;\n    });\n  };\n\n  RequestBuilder.prototype.withCallbackParameterName = function withCallbackParameterName(callbackParameterName) {\n    return this._addTransformer(function (client, processor, message) {\n      message.callbackParameterName = callbackParameterName;\n    });\n  };\n\n  RequestBuilder.prototype.withInterceptor = function withInterceptor(interceptor) {\n    return this._addTransformer(function (client, processor, message) {\n      message.interceptors = message.interceptors || [];\n      message.interceptors.unshift(interceptor);\n    });\n  };\n\n  RequestBuilder.prototype.skipContentProcessing = function skipContentProcessing() {\n    return this._addTransformer(function (client, processor, message) {\n      message.skipContentProcessing = true;\n    });\n  };\n\n  RequestBuilder.prototype._addTransformer = function _addTransformer(fn) {\n    this.transformers.push(fn);\n    return this;\n  };\n\n  RequestBuilder.addHelper = function addHelper(name, fn) {\n    RequestBuilder.prototype[name] = function () {\n      return this._addTransformer(fn.apply(this, arguments));\n    };\n  };\n\n  RequestBuilder.prototype.send = function send() {\n    var message = this.useJsonp ? new JSONPRequestMessage() : new HttpRequestMessage();\n    return this.client.send(message, this.transformers);\n  };\n\n  return RequestBuilder;\n}();\n\nfunction trackRequestStart(client, processor) {\n  client.pendingRequests.push(processor);\n  client.isRequesting = true;\n}\n\nfunction trackRequestEnd(client, processor) {\n  var index = client.pendingRequests.indexOf(processor);\n\n  client.pendingRequests.splice(index, 1);\n  client.isRequesting = client.pendingRequests.length > 0;\n\n  if (!client.isRequesting) {\n    var evt = aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].createCustomEvent('aurelia-http-client-requests-drained', { bubbles: true, cancelable: true });\n    setTimeout(function () {\n      return aurelia_pal__WEBPACK_IMPORTED_MODULE_1__[\"DOM\"].dispatchEvent(evt);\n    }, 1);\n  }\n}\n\nvar HttpClient = function () {\n  function HttpClient() {\n    \n\n    this.isRequesting = false;\n\n    this.rejectPromiseWithErrorObject = false;\n    this.requestTransformers = [];\n    this.requestProcessorFactories = new Map();\n    this.requestProcessorFactories.set(HttpRequestMessage, createHttpRequestMessageProcessor);\n    this.requestProcessorFactories.set(JSONPRequestMessage, createJSONPRequestMessageProcessor);\n    this.pendingRequests = [];\n  }\n\n  HttpClient.prototype.configure = function configure(fn) {\n    var builder = new RequestBuilder(this);\n    fn(builder);\n    this.requestTransformers = builder.transformers;\n    return this;\n  };\n\n  HttpClient.prototype.createRequest = function createRequest(url) {\n    var builder = new RequestBuilder(this);\n\n    if (url) {\n      builder.withUrl(url);\n    }\n\n    return builder;\n  };\n\n  HttpClient.prototype.send = function send(requestMessage, transformers) {\n    var _this6 = this;\n\n    var createProcessor = this.requestProcessorFactories.get(requestMessage.constructor);\n    var processor = void 0;\n    var promise = void 0;\n    var i = void 0;\n    var ii = void 0;\n\n    if (!createProcessor) {\n      throw new Error('No request message processor factory for ' + requestMessage.constructor + '.');\n    }\n\n    processor = createProcessor();\n    trackRequestStart(this, processor);\n\n    transformers = transformers || this.requestTransformers;\n\n    promise = Promise.resolve(requestMessage).then(function (message) {\n      for (i = 0, ii = transformers.length; i < ii; ++i) {\n        transformers[i](_this6, processor, message);\n      }\n\n      return processor.process(_this6, message).then(function (response) {\n        trackRequestEnd(_this6, processor);\n        return response;\n      }).catch(function (response) {\n        trackRequestEnd(_this6, processor);\n        throw response;\n      });\n    });\n\n    promise.abort = promise.cancel = function () {\n      processor.abort();\n    };\n\n    return promise;\n  };\n\n  HttpClient.prototype.delete = function _delete(url) {\n    return this.createRequest(url).asDelete().send();\n  };\n\n  HttpClient.prototype.get = function get(url, params, traditional) {\n    var req = this.createRequest(url).asGet();\n\n    if (params) {\n      return req.withParams(params, traditional).send();\n    }\n\n    return req.send();\n  };\n\n  HttpClient.prototype.head = function head(url) {\n    return this.createRequest(url).asHead().send();\n  };\n\n  HttpClient.prototype.jsonp = function jsonp(url) {\n    var callbackParameterName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'jsoncallback';\n\n    return this.createRequest(url).asJsonp(callbackParameterName).send();\n  };\n\n  HttpClient.prototype.options = function options(url) {\n    return this.createRequest(url).asOptions().send();\n  };\n\n  HttpClient.prototype.put = function put(url, content) {\n    return this.createRequest(url).asPut().withContent(content).send();\n  };\n\n  HttpClient.prototype.patch = function patch(url, content) {\n    return this.createRequest(url).asPatch().withContent(content).send();\n  };\n\n  HttpClient.prototype.post = function post(url, content) {\n    return this.createRequest(url).asPost().withContent(content).send();\n  };\n\n  return HttpClient;\n}();\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! promise-polyfill */ \"B/eG\")[\"default\"]))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1aCK\n");

/***/ })

}]);